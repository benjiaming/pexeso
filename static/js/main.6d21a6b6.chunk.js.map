{"version":3,"sources":["BoxList.js","Game.js","Deck.js","Pexeso.js","serviceWorker.js","index.js"],"names":["Box","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","bind","assertThisInitialized","e","onClick","square","id","_this$props","loaded","cat","react_default","a","createElement","src","image","style","maxWidth","maxHeight","alt","pexesoClass","guessed","className","shown","Component","BoxList","_this$props2","rowLen","squares","boxList","toConsumableArray","Array","fill","map","Null","i","key","row","r","colNum","BoxList_Box","undefined","boxRow","GameOver","_ref","img","deck","width","margin","borderRadius","boxShadow","tryAgainMsg","Game","state","createSquares","images","paused","numTries","loadGame","prevProps","preloadImages","Math","pow","setState","array","length","j","floor","random","_ref2","arr","num","_this2","concat","shuffle","newSquare","pop","_this3","initSquares","console","log","_context","t0","crashed","otherSquareId","forEach","s","sid","reduce","ac","_this4","objectSpread","setTimeout","selectedSquare","disableSelectedSquares","hideAllSquares","_this5","otherSquare","every","_this6","isGuessingSecond","prevState","checkOtherSquareId","isOver","Game_GameOver","getRandomPosition","src_BoxList","crashedMsg","loadingMsg","Deck","_preloadImages","asyncToGenerator","regenerator_default","mark","_callee","promises","results","wrap","prev","next","fetch","url","then","d","json","Promise","all","sent","abrupt","Image","getImg","stop","_x","apply","arguments","CatDeck","icon","obj","gameOverMsg","footerMsg","href","DogDeck","message","Header","settings","role","aria-label","Footer","Pexeso","newDeck","Pexeso_Header","src_Game","Pexeso_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_Pexeso_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6d21a6b6.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Box.css';\n\nclass Box extends Component {\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n    handleClick(e) {\n        this.props.onClick(this.props.square, this.props.id);\n    }\n    render() {\n        const {square, loaded} = this.props;\n        const imgStyle = {\n            maxWidth: \"100%\",\n            maxHeight: \"100%\",\n        };\n        const cat = <img src={square.image} style={imgStyle} alt=\"cat\"></img>;\n        let pexesoClass='pexeso-box';\n        if (square.guessed) {\n            pexesoClass += ' flip-vertical-right hidden';\n        }\n        return (\n            <div className={pexesoClass} onClick={this.handleClick}>\n               { loaded && square.shown ?  cat : <i className=\"far fa-question-circle question\"></i> }\n            </div>\n        )\n    }\n}\n\nclass BoxList extends Component {\n    render() {\n        const { rowLen, squares, loaded, onClick } = this.props;\n        const boxRow = (rowLen, row) => [...Array(rowLen)].fill().map((r, colNum) => {\n            const key = row + (colNum*rowLen);\n            return loaded ? <Box \n                key={key} \n                id={key}\n                square={squares[key]} \n                loaded={loaded}\n                onClick={onClick}\n             /> : undefined\n        });\n        const boxList = [...Array(rowLen)].fill().map((Null, i) => {\n            return <div key={i} className=\"box-row\">{boxRow(rowLen, i)}</div>\n        });\n        return (\n            <div className=\"box-list\">\n                {loaded ? boxList : \"Loading...\"}\n            </div>\n        );\n    }\n}\n\nexport default BoxList;\n\n","import React, { Component } from \"react\";\nimport BoxList from \"./BoxList\";\n\nconst GameOver = ({ img, deck, onClick }) => {\n  return (\n    <div className=\"game-over\">\n      <div />\n      <img\n        className=\"flip-vertical-right\"\n        src={img}\n        width=\"300px\"\n        alt=\"box\"\n        style={{\n          margin: \"20px\",\n          borderRadius: \"10px\",\n          boxShadow: \"-10px 10px 10px black\"\n        }}\n      />\n      <button onClick={onClick}>{deck.tryAgainMsg}</button>\n    </div>\n  );\n};\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.rowLen = 4; //even number\n    this.state = {\n      squares: this.createSquares(),\n      loaded: false,\n      images: [],\n      paused: false,\n      numTries: 0\n    };\n    this.onClick = this.onClick.bind(this);\n    this.loadGame = this.loadGame.bind(this);\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.deck.id !== this.props.deck.id) {\n      this.loadGame();\n    }\n  }\n  componentDidMount() {\n    this.loadGame();\n  }\n  loadGame() {\n    this.preloadImages(this.rowLen ** 2 / 2, this.props.deck);\n    this.setState({ numTries: 0 });\n  }\n  createSquares() {\n    return [...Array(this.rowLen ** 2)].fill({});\n  }\n  shuffle(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n  getRandomPosition(arr) {\n    return Math.floor(Math.random() * arr.length);\n  }\n  newSquare(src) {\n    return {\n      image: src,\n      shown: false,\n      guessed: false\n    };\n  }\n  initSquares(num) {\n    const squares = [...this.state.squares];\n    const images = [...this.state.images, ...this.state.images];\n    this.shuffle(images);\n    this.setState({ images }, () => {\n      for (let i = 0; i < squares.length; i++) {\n        squares[i] = this.newSquare(images.pop().src);\n      }\n      this.setState({ squares, loaded: true });\n    });\n  }\n  async preloadImages(num, deck) {\n    try {\n      const images = await deck.preloadImages(num);\n      this.setState({ images }, () => {\n        this.initSquares(this.rowLen);\n      });\n    } catch (err) {\n      console.log(err);\n      this.setState({ crashed: true });\n    }\n  }\n\n  otherSquareId(square, id, squares) {\n    let otherSquareId;\n    squares.forEach((s, sid) => {\n      if (id !== sid && s.image === square.image && s.shown) {\n        otherSquareId = sid;\n        return;\n      }\n    });\n    return otherSquareId;\n  }\n  isGuessingSecond(squares) {\n    const numShown = squares.reduce((ac, s) => {\n      if (s.shown && !s.guessed) {\n        ac++;\n      }\n      return ac;\n    }, 0);\n    return numShown % 2 === 0;\n  }\n  hideAllSquares() {\n    const squares = [...this.state.squares];\n    this.state.squares.forEach((s, i) => {\n      if (s.shown) {\n        const newSquare = { ...s };\n        newSquare.shown = false;\n        squares[i] = newSquare;\n      }\n    });\n    this.setState({ paused: true }, () => {\n      setTimeout(() => {\n        this.setState({ paused: false, squares });\n      }, 1000);\n    });\n  }\n  checkOtherSquareId(selectedSquare, id, squares) {\n    const otherSquareId = this.otherSquareId(selectedSquare, id, squares);\n    if (otherSquareId === undefined) {\n      this.hideAllSquares();\n      return;\n    }\n    this.disableSelectedSquares(selectedSquare, squares, otherSquareId);\n  }\n  disableSelectedSquares(selectedSquare, squares, otherSquareId) {\n    this.setState({ paused: true }, () => {\n      setTimeout(() => {\n        selectedSquare.guessed = true;\n        const otherSquare = { ...squares[otherSquareId] };\n        otherSquare.guessed = true;\n        squares[otherSquareId] = otherSquare;\n        this.setState({ paused: false, squares });\n      }, 500);\n    });\n  }\n  isOver() {\n    if (!this.state.loaded) {\n      return false;\n    }\n    return this.state.squares.every(square => square.guessed);\n  }\n  onClick(square, id) {\n    if (this.state.paused) {\n      return;\n    }\n    const squares = [...this.state.squares];\n    const selectedSquare = { ...squares[id] };\n    selectedSquare.shown = !selectedSquare.shown;\n    squares[id] = selectedSquare;\n    this.setState({ squares }, () => {\n      if (this.isGuessingSecond(squares)) {\n        this.setState(\n          prevState => {\n            prevState.numTries = prevState.numTries + 1;\n          },\n          () => {\n            this.checkOtherSquareId(selectedSquare, id, squares);\n          }\n        );\n      }\n    });\n  }\n\n  render() {\n    if (this.isOver()) {\n      return (\n        <GameOver\n          img={\n            this.state.squares[this.getRandomPosition(this.state.squares)].image\n          }\n          deck={this.props.deck}\n          onClick={this.loadGame}\n        />\n      );\n    }\n    return (\n      <div className=\"game\">\n        {this.state.loaded ? (\n          <div>\n            <BoxList\n              rowLen={this.rowLen}\n              loaded={this.state.loaded}\n              squares={this.state.squares}\n              onClick={this.onClick}\n            />\n            <div>Attempts: {this.state.numTries}</div>\n          </div>\n        ) : this.state.crashed ? (\n          <div>{this.props.deck.crashedMsg}</div>\n        ) : (\n          <div>{this.props.deck.loadingMsg}</div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React from \"react\";\n\nexport const Deck = {\n  preloadImages: async function(num) {\n    const promises = [...Array(num)]\n      .fill()\n      .map(i => fetch(this.url).then(d => d.json()));\n    const results = await Promise.all(promises);\n    return results.map(r => {\n      const image = new Image();\n      image.src = this.getImg(r);\n      return image;\n    });\n  }\n};\nconst CatApi = () => {\n  return (\n    <span>\n      Cats provided by{\" \"}\n      <a href=\"https://thecatapi.com/\">TheCatAPI - Cats as a Service</a>,\n      Everyday is Caturday.\n    </span>\n  );\n};\nexport const CatDeck = {\n  id: \"cat\",\n  icon: \"🐱\",\n  url: \"https://api.thecatapi.com/v1/images/search?size=full\",\n  getImg: obj => obj[0].url,\n  gameOverMsg: \"Purrrr! Nicely done!! Meow!!!\",\n  loadingMsg: \"Herding cats. Please wait...\",\n  crashedMsg: \"Cats are sleeping. Please try again later.\",\n  footerMsg: <CatApi />,\n  tryAgainMsg: \"Trrrrry again?\"\n};\nCatDeck.preloadImages = Deck.preloadImages;\n\nconst DogApi = () => {\n  return (\n    <span>\n      Dog images courtesy of <a href=\"https://dog.ceo/dog-api/\">Dog CEO</a>.\n    </span>\n  );\n};\nexport const DogDeck = {\n  id: \"dog\",\n  icon: \"🐶\",\n  url: \"https://dog.ceo/api/breeds/image/random\",\n  getImg: obj => obj.message,\n  gameOverMsg: \"Woof woof.\",\n  loadingMsg: \"Fetching all the dogs. Please wait...\",\n  crashedMsg: \"Dogs are sleeping. Please try again later.\",\n  footerMsg: <DogApi />,\n  tryAgainMsg: \"Would you like another try?\"\n};\nDogDeck.preloadImages = Deck.preloadImages;\n","import React, { Component } from \"react\";\n\nimport Game from \"./Game\";\nimport { CatDeck, DogDeck } from \"./Deck\";\n\nimport \"./Pexeso.css\";\n\nconst Header = ({ deck, settings }) => {\n  const icon = (\n    <span role=\"img\" aria-label=\"icon\">\n      {deck.icon}\n    </span>\n  );\n  return (\n    <div className=\"header\">\n      <span className=\"header-icons\">\n        {icon} Pexeso {icon}\n      </span>\n      <span>\n        <i className=\"settings fas fa-cogs\" onClick={settings} />\n      </span>\n    </div>\n  );\n};\nconst Footer = ({ deck }) => {\n  return <div className=\"footer\">{deck.footerMsg}</div>;\n};\nclass Pexeso extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      deck: CatDeck\n    };\n    this.settings = this.settings.bind(this);\n  }\n  settings() {\n    let newDeck = CatDeck;\n    if (this.state.deck.id === \"cat\") newDeck = DogDeck;\n    this.setState({ deck: newDeck });\n  }\n  render() {\n    return (\n      <div className=\"Pexeso\">\n        <Header deck={this.state.deck} settings={this.settings} />\n        <Game deck={this.state.deck} />\n        <Footer deck={this.state.deck} />\n      </div>\n    );\n  }\n}\n\nexport default Pexeso;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Pexeso from \"./Pexeso\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<Pexeso />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}